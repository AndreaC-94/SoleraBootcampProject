[{"C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\index.js":"1","C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\App.js":"2","C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\BigDiv\\BigDiv.js":"3","C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\Header\\Header.js":"4","C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\NewGroup\\NewGroup.js":"5","C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\Popup\\Popup.js":"6","C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\AddPoints\\AddPoints.js":"7","C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\NewGroup\\GroupForm.js":"8","C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\AddPoints\\AddPointsForm.js":"9","C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\GroupDetails\\GroupDetails.js":"10","C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\Group\\Group.js":"11","C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\AddAssignment\\AddAssignment.js":"12","C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\AddAssignment\\AddAssignmentForm.js":"13"},{"size":265,"mtime":1668078938694,"results":"14","hashOfConfig":"15"},{"size":287,"mtime":1668609293165,"results":"16","hashOfConfig":"15"},{"size":3862,"mtime":1668700108904,"results":"17","hashOfConfig":"15"},{"size":1675,"mtime":1668700143385,"results":"18","hashOfConfig":"15"},{"size":408,"mtime":1668606453548,"results":"19","hashOfConfig":"15"},{"size":396,"mtime":1668609293193,"results":"20","hashOfConfig":"15"},{"size":458,"mtime":1668609293168,"results":"21","hashOfConfig":"15"},{"size":920,"mtime":1668699993926,"results":"22","hashOfConfig":"15"},{"size":1747,"mtime":1668699993897,"results":"23","hashOfConfig":"15"},{"size":1332,"mtime":1668699993919,"results":"24","hashOfConfig":"15"},{"size":450,"mtime":1668699993911,"results":"25","hashOfConfig":"15"},{"size":541,"mtime":1668699993886,"results":"26","hashOfConfig":"15"},{"size":1352,"mtime":1668699993894,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"4osngi",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"39"},"C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\index.js",[],[],[],"C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\App.js",[],[],"C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\BigDiv\\BigDiv.js",["73"],[],"import React, { useState } from 'react'\r\nimport Header from '../Header/Header';\r\nimport GroupDetails from '../GroupDetails/GroupDetails';\r\nimport Group from '../Group/Group';\r\nimport './BigDiv.css';\r\n\r\nimport Popup from '../Popup/Popup';\r\n\r\n\r\n// let groupList = [];\r\n\r\n// console.log(groupList, \" groupList\");\r\n\r\n\r\nlet idNumber;\r\n\r\n\r\n//get tasks from first group of groupList\r\n// const task1 = groupList[0].tasks;\r\nconst task1 = [\"HTML\", \"React\", \"JS\", \"c++\"];\r\n\r\n//get score from first group of groupList\r\n// const tasksScore1 = groupList[0].score;\r\nconst tasksScore1 = [11, 22, 33, 41];\r\n\r\nconst task2 = [\"HTML\", \"React\", \"JS\", \"c++\"];\r\nconst tasksScore2 = [44, 14, 54, 56];\r\nconst taskIsDone2 = [true,true,true,true,];\r\nconst task3 = [\"HTML\", \"React\", \"JS\", \"c++\"];\r\nconst tasksScore3 = [77, 33, 76, 99];\r\nconst taskIsDone3 = [false,false,true,true];\r\nconst task4 = [\"HTML\", \"React\", \"JS\", \"c++\"];\r\nconst tasksScore4 = [33, 66, 32, 21];\r\nconst taskIsDone4 = [false,false,false,false];\r\n\r\nlet idNumber;\r\nlet groupList =[\r\n  {id: 1, name: 'Group 1', points: '100', assignment:'5', tasks:task1, score:tasksScore1, isDone:taskIsDone1},\r\n  {id: 2, name: 'Group 2', points: '150', assignment:'8', tasks:task2, score:tasksScore2,isDone:taskIsDone2},\r\n  {id: 3, name: 'Group 3', points: '130', assignment:'6', tasks:task3, score:tasksScore3,isDone:taskIsDone3},\r\n  {id: 4, name: 'Group 4', points: '95', assignment:'3', tasks:task4, score:tasksScore4,isDone:taskIsDone4},\r\n  {id: 5, name: 'Group 3', points: '130', assignment:'6', tasks:task3, score:tasksScore3,isDone:taskIsDone3},\r\n  {id: 6, name: 'Group 3', points: '130', assignment:'6', tasks:task3, score:tasksScore3,isDone:taskIsDone3}];\r\nexport default function BigDiv() {\r\n\r\n  const [isShown, setIsShown] = useState(false);\r\n  const [buttonPopup, setButtonPopup] = useState(false);\r\n  const [groupList, setGroupList] = useState([]);\r\n\r\n  async function call() {\r\n    try {\r\n      //path to data.json file in public folder\r\n      // const response = await fetch('data.json');\r\n      const response = await fetch('http://localhost:8081/getAll', {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n      const groups = await response.json();\r\n      setGroupList(groups);\r\n    } catch (error) {\r\n      console.log('Error with fetching data!', error);\r\n    }\r\n  }\r\n\r\n  call();\r\n\r\n\r\n  const handleClick = event => {\r\n    setButtonPopup(true);\r\n    setIsShown(current => !current);\r\n    idNumber = parseInt(event.currentTarget.id);\r\n    const groupDetail = {\r\n      id: event.currentTarget.id,\r\n      name: event.currentTarget.name,\r\n      points: event.currentTarget.points,\r\n      tasks: event.currentTarget.tasks,\r\n      taskScore: event.currentTarget.score,\r\n      isDone: event.currentTarget.isDone\r\n    };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"BigDiv\" id=\"BigDiv\">\r\n\r\n        {groupList.map((groupList) =>\r\n        (<button onClick={handleClick} id={groupList.name} key={groupList.name}>\r\n          <Group\r\n            key={groupList.id}\r\n            name={groupList.name}\r\n            points={groupList.points}\r\n            assignment={groupList.assignment}\r\n            total={groupList.tasks.length}\r\n            /></button>\r\n            ))}\r\n        </div> \r\n         <Popup trigger = {buttonPopup} setTrigger={setButtonPopup} id={Popup}>\r\n                  <GroupDetails \r\n                    key={groupList[idNumber-1]?.id}\r\n                    name={groupList[idNumber-1]?.name} \r\n                    points={groupList[idNumber-1]?.points} \r\n                    task={groupList[idNumber-1]?.tasks} \r\n                    taskScore={groupList[idNumber-1]?.score}\r\n                    isDone={groupList[idNumber-1]?.isDone}\r\n                    />\r\n         </Popup>         \r\n        \r\n    </>\r\n  )\r\n}\r\n",[],"C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\Header\\Header.js",[],[],"C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\NewGroup\\NewGroup.js",[],[],"C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\Popup\\Popup.js",[],[],"C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\AddPoints\\AddPoints.js",[],[],"C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\NewGroup\\GroupForm.js",["74","75"],[],"import \"./GroupForm.css\";\r\nimport React, { useState } from 'react'\r\n\r\n\r\nconst GroupForm = (props) => {\r\n    const [enteredName, setEnteredName] = useState(\"\");\r\n\r\n    const nameChangeHandler = (event) => {\r\n        setEnteredName(event.target.value);\r\n    }\r\n \r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const groupData = {\r\n            name: enteredName\r\n        }\r\n        props.onSaveGroupData(groupData);\r\n        setEnteredName('');\r\n        \r\n    }\r\n\r\n    return <form >\r\n        <div className=\"textDiv\" onSubmit={submitHandler}>\r\n            <div className=\"labelDiv\">Insert your group name</div>\r\n            <label>Group name:</label>\r\n            <input type=\"text\" min=\"1\" required=\"0\" onChange={nameChangeHandler} value={enteredName}></input><p></p>\r\n            <button type=\"submit\">Add Group</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default GroupForm;","C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\AddPoints\\AddPointsForm.js",["76"],[],"import \"./AddPointsForm.css\";\r\nimport React, { useState } from 'react';\r\n\r\nfunction AddPointsForm(props) {\r\n    const [enteredPoints, setEnteredPoints] = useState(\"\");\r\n    const [enteredTeam, setEnteredTeam] = useState(\"\");\r\n    const [enteredDescription, setEnteredDescription] = useState(\"\");\r\n\r\n    const PointsChangeHandler = (event) => {\r\n        setEnteredPoints(event.target.value);\r\n    };\r\n    const TeamChangeHandler = (event) => {\r\n        setEnteredTeam(event.target.value);\r\n    };\r\n    const DescriptionChangeHandler = (event) => {\r\n        setEnteredDescription(event.target.value);\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const groupData = {\r\n            points: enteredPoints,\r\n            team: enteredTeam,\r\n            description: enteredDescription\r\n        };\r\n        props.onSaveGroupData(groupData);\r\n        setEnteredPoints('');\r\n        setEnteredTeam('');\r\n        setEnteredDescription('');\r\n    };\r\n\r\n    return <form>\r\n        <div className=\"textDiv\" onSubmit={submitHandler}>\r\n            <div className=\"labelDiv\">Add extra points to group</div>\r\n            <label>Points: </label>\r\n            <input type=\"number\" min=\"0\" required=\"0\" onChange={PointsChangeHandler} value={enteredPoints}></input><p></p>\r\n            <label>Team: </label>\r\n            <input type=\"text\" min=\"1\" required=\"0\" onChange={TeamChangeHandler} value={enteredTeam}></input><p></p>\r\n            <label>Description: </label>\r\n            <input type=\"text\" min=\"0\" required=\"0\" onChange={DescriptionChangeHandler} value={enteredDescription}></input><p></p>\r\n            <button type=\"submit\">Add Points</button>\r\n        </div>\r\n\r\n    </form>;\r\n}\r\n\r\nexport default AddPointsForm;","C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\GroupDetails\\GroupDetails.js",[],[],"C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\Group\\Group.js",[],[],"C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\AddAssignment\\AddAssignment.js",[],[],"C:\\Users\\Joao.Goncalves\\workspace\\SoleraBootcampProject\\src\\Components\\AddAssignment\\AddAssignmentForm.js",["77"],[],"import \"./AddAssignmentForm.css\";\r\nimport React, { useState } from 'react';\r\n\r\n\r\nfunction AddAssignmentForm(props) {\r\n    const [enteredPoints, setEnteredPoints] = useState(\"\");\r\n    const [enteredName, setEnteredName] = useState(\"\");\r\n\r\n    const PointsChangeHandler = (event) => {\r\n        setEnteredPoints(event.target.value);\r\n    };\r\n    const NameChangeHandler = (event) => {\r\n        setEnteredName(event.target.value);\r\n    };\r\n    \r\n   \r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const groupData = {\r\n            score: enteredPoints,\r\n            task: enteredName,\r\n        };\r\n        props.onSaveGroupData(groupData);\r\n        setEnteredPoints('');\r\n        setEnteredName('');\r\n    };\r\n    return <form>\r\n        <div className=\"textDiv\" onSubmit={submitHandler}>\r\n            <div className=\"labelDiv\">Add assignments to all groups</div>\r\n            <label>Name of the assignment: </label>\r\n            <input type=\"text\" min=\"1\" required=\"0\" onChange={NameChangeHandler} value={enteredName}></input><p></p>\r\n            <label>Points: </label>\r\n            <input type=\"number\" min=\"0\" required=\"0\" onChange={PointsChangeHandler} value={enteredPoints}></input><p></p>\r\n            <button type=\"submit\">Add Points</button>\r\n        </div>\r\n\r\n    </form>;\r\n}\r\n\r\nexport default AddAssignmentForm;",{"ruleId":null,"fatal":true,"severity":2,"message":"78","line":36,"column":4},{"ruleId":"79","severity":1,"message":"80","line":13,"column":11,"nodeType":"81","messageId":"82","endLine":13,"endColumn":30},{"ruleId":"79","severity":1,"message":"83","line":16,"column":11,"nodeType":"81","messageId":"82","endLine":16,"endColumn":34},{"ruleId":"79","severity":1,"message":"84","line":19,"column":11,"nodeType":"81","messageId":"82","endLine":19,"endColumn":24},{"ruleId":"79","severity":1,"message":"85","line":2,"column":17,"nodeType":"81","messageId":"82","endLine":2,"endColumn":25},"Parsing error: Identifier 'idNumber' has already been declared. (36:4)","no-unused-vars","'pointsChangeHandler' is assigned a value but never used.","Identifier","unusedVar","'assignmentChangeHandler' is assigned a value but never used.","'submitHandler' is assigned a value but never used.","'useState' is defined but never used."]